<div id="wrap" class="signUp">
    <div class="container">
        <svg id="ryan" viewBox="0 0 120 120" xmlns="http://www.w3.org/2000/svg">
            <path d="M0,150 C0,65 120,65 120,150" fill="#e0a243" stroke="#000" stroke-width="2.5" />
            <g class="ears">
                <path d="M46,32 L46,30 C46,16 26,16 26,30 L26,32" fill="#e0a243" stroke="#000" stroke-width="2.5" stroke-linecap="round" transform="rotate(-10,38,24)" />
                <path d="M74,32 L74,30 C74,16 94,16 94,30 L94,32" fill="#e0a243" stroke="#000" stroke-width="2.5" stroke-linecap="round" transform="rotate(10,82,24)" />
            </g>
            <circle cx="60" cy="60" r="40" fill="#e0a243" stroke="#000" stroke-width="2.5" />
            <g class="eyes">
                <!-- left eye and eyebrow-->
                <line x1="37" x2="50" y1="46" y2="46" stroke="#000" stroke-width="3" stroke-linecap="round" />
                <circle cx="44" cy="55" r="3" fill="#000" />
                <!-- right eye and eyebrow -->
                <line x1="70" x2="83" y1="46" y2="46" stroke="#000" stroke-width="3" stroke-linecap="round" />
                <circle cx="76" cy="55" r="3" fill="#000" />
            </g>
            <g class="muzzle">
                <path d="M60,66 C58.5,61 49,63 49,69 C49,75 58,77 60,71 M60,66 C61.5,61 71,63 71,69 C71,75 62,77 60,71" fill="#fff" />
                <path d="M60,66 C58.5,61 49,63 49,69 C49,75 58,77 60,71 M60,66 C61.5,61 71,63 71,69 C71,75 62,77 60,71" fill="#fff" stroke="#000" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round" />
                <polygon points="59,63.5,60,63.4,61,63.5,60,65" fill="#000" stroke="#000" stroke-width="5" stroke-linejoin="round" />
            </g>
            <path d="M40,105 C10,140 110,140 80,105 L80,105 L70,111 L60,105 L50,111 L40,105" fill="#fff" />
        </svg>
        <div class="formBox">
            <form action="#" method="POST" id="signUpForm">
                <div class="form-group email-group disabled">
                    <input type="text" name="email" id="email" placeholder="이메일을 입력해주세요">
                    <p class="emailAlert"></p>
                </div>
                <div class="form-group password-group disabled">
                    <input type="password" name="password" id="password" placeholder="비밀번호를 입력해주세요">
                    <p class="passwordAlert"></p>
                </div>
                <div class="form-group passwordConfirm-group disabled">
                    <input type="password" name="passwordConfirm" id="passwordConfirm" placeholder="비밀번호를 다시 입력해주세요">
                    <p class="passwordConfirmAlert"></p>
                </div>
                <div class="form-group name-group disabled">
                    <input type="text" name="name" id="name" placeholder="사용하실 이름 또는 닉네임을 입력해주세요">
                    <p class="nameAlert"></p>
                </div>
                <div class="form-group gender-group">
                    <div class="genderM on" style="float: left;">남자</div>
                    <div class="genderF" style="float: right;">여자</div>
                    <input type="radio" name="gender" id="genderM" value="M" checked>
                    <input type="radio" name="gender" id="genderF" value="F">
                </div>
            </form>
        </div>

    </div>
    <a href="/login" class="btnBack"><i class="fas fa-arrow-left"></i></a>
    <a href="#" class="btnSubmit">가입하기</a>
</div>
<script>
    $(".gender-group > div").click(function(){
        var tg = $(this);
        $(".gender-group > div").removeClass("on")
        tg.addClass("on")
        if(tg.hasClass("genderM")){
            document.getElementById("genderF").checked = false;
            document.getElementById("genderM").checked = true;
        }else{
            document.getElementById("genderM").checked = false;
            document.getElementById("genderF").checked = true;
        }
    })
    $(".btnSubmit").click(function(e){
        e.preventDefault();
        if($(".email-group").hasClass("disabled")){
            alert("이메일을 확인해 주세요");
            $("#email").focus();
            return;
        }else if($(".password-group").hasClass("disabled")){
            alert("비밀번호를 확인해 주세요");
            $("#password").focus();
            return;
        }else if($(".passwordConfirm-group").hasClass("disabled")){
            alert("비밀번호를 확인해 주세요");
            $("#passwordConfirm").focus();
            return;
        }else if($(".name-group").hasClass("disabled")){
            alert("닉네임을 확인해주세요")
            $("#name").focus();
            return;
        }else{
            $("#signUpForm").submit();
        }

    })
    const emailRule = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;//이메일 정규식

    let emailList = new Array;

    {{#each userList }}
        emailList.push("{{this}}");
    {{/each}}

    $("#email").blur(function(e){
        if($("#email").val()==""){
            $(".emailAlert").css({"color":"red"})
            $(".emailAlert").text("이메일을 입력해 주세요");
            return;
        }
        if(emailRule.test($("#email").val())){
            for(let i = 0; i<emailList.length; i++){
                if($("#email").val() == emailList[i]){
                    $(".emailAlert").css({"color":"red"})
                    $(".emailAlert").text("이미 가입된 이메일 입니다.")
                    return;
                }else{
                    $(".emailAlert").css({"color":"green"})
                    $(".emailAlert").text("가입 가능한 이메일 입니다.")
                    $(".email-group").removeClass("disabled");
                    return;
                }
            }
        }else{
            $(".emailAlert").css({"color":"red"})
            $(".emailAlert").text("이메일 형식이 아닙니다")
            return false;
        }
    })

    $("#password").blur(function(e){
        if($("#password").val()==""){
            $(".passwordAlert").css({"color":"red"})
            $(".passwordAlert").text("비밀번호를 입력해주세요");
            return;
        }else{
            $(".passwordAlert").css({"color":"green"})
            $(".passwordAlert").text("비밀번호를 한번더 입력해주세요")
            $(".password-group").removeClass("disabled");
        }
    })

    $("#passwordConfirm").blur(function(e){
        if($("#passwordConfirm").val()==""){
            $(".passwordConfirmAlert").css({"color":"red"})
            $(".passwordConfirmAlert").text("비밀번호를 입력해주세요");
            return;
        }
        if($("#password").val() != $("#passwordConfirm").val()){
            $(".passwordConfirmAlert").css({"color":"red"})
            $(".passwordConfirmAlert").text("정확한 비밀번호를 입력해주세요");
            return;
        }else{
            $(".passwordConfirmAlert").css({"color":"green"})
            $(".passwordAlert").text("")
            $(".passwordConfirmAlert").text("비밀번호가 확왼되었습니다.")
            $(".passwordConfirm-group").removeClass("disabled");
            return;
        }
    });

    $("#name").blur(function(e){
        if($("#name").val()==""){
            $(".nameAlert").css({"color":"red"})
            $(".nameAlert").text("닉네임을 입력해주세요");
            return;
        }else{
            $(".nameAlert").css({"color":"green"})
            $(".nameAlert").text("가입 가능한 닉네임입니다.");
            $(".name-group").removeClass("disabled");
            return;
        }
    })
</script>
<script>

    (function(){
        const ryan = document.querySelector('#ryan');
        const face = document.querySelectorAll('.ears, .eyes, .muzzle');
        const email = document.querySelector('input[name="email"]');
        const name = document.querySelector('input[name="name"]');
        const password = document.querySelector('input[name="password"]');
        const passwordConfirm = document.querySelector('input[name="passwordConfirm"]');
        const fauxInput = document.createElement('div');
        const span = document.createElement('span');
        let timer = null;

        function rotate3d(x, y, z, rad) {
            const value = `rotate3d(${x}, ${y}, ${z}, ${rad}rad)`;
            for (let i=0; i < face.length; i++) {
                face[i].style.transform = value;
            }
        }

        function focus(event) {
            event.target.classList.add('focused');
            copyStyles(event.target);
            event.target.type === 'password' ? lookAway(event) : look(event);
        }

        function reset(event) {
            event.target.classList.remove('focused');
            ryan.classList.remove('playing');

            clearTimeout(timer);
            timer = setTimeout( () => {
                ryan.classList.remove('look-away', 'down', 'up');
            rotate3d(0,0,0,0);
        }, 1 );
        }

        function copyStyles(el) {
            const props = window.getComputedStyle(el, null);

            if ( fauxInput.parentNode === document.body ) {
                document.body.removeChild(fauxInput);
            }

            fauxInput.style.visibility = 'hidden';
            fauxInput.style.position = 'absolute';
            fauxInput.style.top = Math.min(el.offsetHeight * -2, -999) + 'px';

            for(let i=0; i < props.length; i++) {
                if (['visibility','display','opacity','position','top','left','right','bottom'].indexOf(props[i]) !== -1) {
                    continue;
                }
                fauxInput.style[props[i]] = props.getPropertyValue(props[i]);
            }

            document.body.appendChild(fauxInput);
        }

        function look(event) {
            const el = event.target;
            const text = el.value.substr(0, el.selectionStart);

            span.innerText = text || '.';

            const ryanRect = ryan.getBoundingClientRect();
            const inputRect = el.getBoundingClientRect();
            const caretRect = span.getBoundingClientRect();
            const caretPos = caretRect.left + Math.min(caretRect.width, inputRect.width) * !!text;
            const distCaret = ryanRect.left + ryanRect.width/2 - inputRect.left - caretPos;
            const distInput = ryanRect.top + ryanRect.height/2 - inputRect.top;
            const y = Math.atan2(-distCaret, Math.abs(distInput)*3);
            const x =  Math.atan2(distInput, Math.abs(distInput)*3 / Math.cos(y));
            const angle = Math.max(Math.abs(x), Math.abs(y));

            rotate3d(x/angle, y/angle, y/angle/2, angle);
        }

        function lookAway(event) {
            const el = event.target;
            const ryanRect = ryan.getBoundingClientRect();
            const inputRect = el.getBoundingClientRect();
            const distInput = ryanRect.top + ryanRect.height/2 - inputRect.top;

            ryan.classList.add( 'look-away', distInput < 0 ? 'up' : 'down' );

            clearTimeout(timer);
            timer = setTimeout( () => {
                ryan.classList.add( 'playing' );
        }, 300);
        }

        fauxInput.appendChild(span);

        email.addEventListener( 'focus', focus, false );
        email.addEventListener( 'keyup', look, false );
        email.addEventListener( 'click', look, false );
        email.addEventListener( 'blur', reset, false );

        name.addEventListener( 'focus', focus, false );
        name.addEventListener( 'keyup', look, false );
        name.addEventListener( 'click', look, false );
        name.addEventListener( 'blur', reset, false );

        password.addEventListener( 'focus', lookAway, false );
        password.addEventListener( 'blur', reset, false );

        passwordConfirm.addEventListener( 'focus', lookAway, false );
        passwordConfirm.addEventListener( 'blur', reset, false );

    })();

</script>